[{"C:\\Users\\nayeon\\Desktop\\React class\\shop\\src\\index.js":"1","C:\\Users\\nayeon\\Desktop\\React class\\shop\\src\\App.js":"2","C:\\Users\\nayeon\\Desktop\\React class\\shop\\src\\reportWebVitals.js":"3","C:\\Users\\nayeon\\Desktop\\React class\\shop\\src\\data.js":"4","C:\\Users\\nayeon\\Desktop\\React class\\shop\\src\\Detail.js":"5"},{"size":313,"mtime":1610087917923,"results":"6","hashOfConfig":"7"},{"size":3182,"mtime":1610646265132,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":384,"mtime":1609866165505,"results":"10","hashOfConfig":"7"},{"size":2412,"mtime":1610653382389,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"3bdprt",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"C:\\Users\\nayeon\\Desktop\\React class\\shop\\src\\index.js",[],["27","28"],"C:\\Users\\nayeon\\Desktop\\React class\\shop\\src\\App.js",["29","30"],"import React, { useState } from \"react\";\nimport { Navbar, Nav, NavDropdown, Button, Jumbotron } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Data from \"./data.js\";\nimport { Route, Link, Switch } from \"react-router-dom\";\nimport Detail from './Detail';\n\nfunction App() {\n\n  let [shoes, shoes변경] = useState(Data);\n\n  return (\n    <div className=\"App\">\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">Shoe Shop</Navbar.Brand> \n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/\">\n              {/* Nav.Link를 Link처럼 사용해달라는 의미 */}\n              Home\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/detail\">\n              Detail\n            </Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Another action\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n                Separated link\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Nav>\n            <Nav.Link href=\"#deets\">More deets</Nav.Link>\n            <Nav.Link eventKey={2} href=\"#memes\">\n              Dank memes\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n    <Switch>\n      <Route exact path=\"/\">\n        <div>\n          <Jumbotron className=\"background\">\n            <h1>20% Season OFF</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for\n              calling extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n          <div className=\"container\">\n            <div className=\"row\">\n              {\n                //a는 가져올 shoes라는 array안에 있는 데이터 하나하나를 의미\n                //i는 반복될 숫자 0,1,2\n                shoes.map((a, i) => {\n                  return <Card shoes={shoes[i]} i={i} key={i} />;\n                  //return <Card shoes{a}/> 이것도 위와 결과가 같다.\n                })\n              }\n            </div>\n          </div>\n        </div>\n      </Route>\n\n      <Route path=\"/detail/:id\">\n        <Detail shoes={shoes}/>\n      </Route>\n\n      <Route path=\"/:id\"> \n        <div>/뒤에 아무거나 적으면 이거 보여줘라</div>\n      </Route>\n    </Switch>    \n\n    </div>\n  );\n}\n\nfunction Card(props) {\n  return (\n    <div className=\"col-md-4\">\n      <img\n        src={`https://codingapple1.github.io/shop/shoes${props.i + 1}.jpg`}\n        width=\"100%\"\n      />\n      <h4>{props.shoes.title}</h4>\n      <p>\n        {props.shoes.content} &{props.shoes.price}\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\nayeon\\Desktop\\React class\\shop\\src\\reportWebVitals.js",[],["31","32"],"C:\\Users\\nayeon\\Desktop\\React class\\shop\\src\\data.js",["33"],"export default [\r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000\r\n    }\r\n  ] ","C:\\Users\\nayeon\\Desktop\\React class\\shop\\src\\Detail.js",["34","35","36","37"],"import React,{useState, useEffect} from 'react';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\n\r\nlet 박스 = styled.div`\r\n  padding : 20px;\r\n`;\r\n\r\nlet 제목 = styled.h4`\r\n  font-size : 25px;\r\n  color : ${ props => props.색상 }\r\n`;\r\n\r\n\r\nfunction Detail(props){\r\n \r\n  const [alert, setAlert] = useState(true);\r\n  //true 일 때만 원하는 코드 보이게 하기 위한 상태 저장\r\n\r\n    useEffect(()=>{\r\n     let 타이머 = setTimeout(()=>{setAlert(false)},2000); \r\n     return ()=>{ clearTimeout(타이머)} //컴포넌트가 사라질 때 타이머 해제시켜서 버그 방지\r\n    }, [alert]) //alert라는 state가 update 될 때만 실행해달라는 조건을 붙임.\r\n    //이런 조건을 붙이지 않으면 해당 컴포넌트가 update 될 때마다 계속 재렌더링되어 실행됨.\r\n    //빈 대괄호만 적고 대괄호 안에 아무것도 넣지 않으면 컴포넌트가 동작할 때 딱 한 번만 실행되고\r\n    //다시는 실행되지 않음.\r\n\r\n    let {id} = useParams();\r\n    let history = useHistory();\r\n    let prd = props.shoes.find(x=>x.id == id);\r\n\r\n    return(\r\n          <div className=\"container\">\r\n            <박스>\r\n              <제목 className=\"red\">Detail</제목>\r\n            </박스>\r\n          \r\n          {/*삼항연산자로 true일 경우 코드를 넣어주고 아닐경우 null을 넣어줌*/}\r\n            {\r\n              alert === true ? (  <div className=\"my-alert\">\r\n              <p>재고가 얼마 남지 않았습니다</p>\r\n            </div>) : null\r\n            }\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <img\r\n                  src=\"https://codingapple1.github.io/shop/shoes1.jpg\"\r\n                  width=\"100%\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6 mt-4\">\r\n\r\n                <h4 className=\"pt-5\">{prd.title}</h4>\r\n                <p>{prd.content}</p>\r\n                <p>{prd.price}원</p>\r\n                <button className=\"btn btn-danger\">주문하기</button>\r\n                <button className=\"btn btn-danger\" onClick={()=>{\r\n                  // history.goBack();\r\n                  history.push('/'); \r\n                }}>뒤로가기</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default Detail;",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":10,"column":15,"nodeType":"44","messageId":"45","endLine":10,"endColumn":22},{"ruleId":"46","severity":1,"message":"47","line":91,"column":7,"nodeType":"48","endLine":94,"endColumn":9},{"ruleId":"38","replacedBy":"49"},{"ruleId":"40","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":1,"nodeType":"53","endLine":22,"endColumn":4},{"ruleId":"54","severity":1,"message":"55","line":31,"column":40,"nodeType":"56","messageId":"57","endLine":31,"endColumn":42},{"ruleId":"58","severity":1,"message":"59","line":35,"column":13,"nodeType":"48","endLine":35,"endColumn":17},{"ruleId":"58","severity":1,"message":"60","line":36,"column":15,"nodeType":"48","endLine":36,"endColumn":35},{"ruleId":"46","severity":1,"message":"47","line":48,"column":17,"nodeType":"48","endLine":51,"endColumn":19},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'shoes변경' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["61"],["62"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component 박스 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component 제목 must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]